scalar Object

type Query{
    ping: String!
    getUserByEmail(email: String!): AzureUser
    doesUserExist(email: String!): Boolean
}

type Mutation{
    deleteUser(userId: String): String!
    resetPassword(userId: String!): String!
    createUser(displayName: String!, mailNickname: String!, userPrincipalName: String!, mobilePhone: String!, password: String!): String!
    unlockUser(userId: String!): String!
    disableUser(userId: String!): String!
    sendMessage(message : MessageInput): MessageOutput!

}

type Subscription {
    subscription(message : MessageInput): MessageOutput
}

input MessageInput{
    session: String
    user: String
    message: String
    timestamp: Float
    inputType: String
}

type MessageOutput{
    session: String
    user: String
    message: String
    timestamp: Float
    inputType: String
}

type AzureUser{

    displayName: String
    givenName: String
    surname: String
    jobTitle: String
    mail: String
    mobilePhone: String
    officeLocation: String
    userPrincipalName: String
    id: String

}
