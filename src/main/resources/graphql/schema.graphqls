scalar Object

type Query{
    ping: String!
    getUsers: [User]
}

type Subscription {
    messaging(chat : MessageInput!): MessageOutput
}
input MessageInput{
    user: String!
    message: String!
    timestamp: Float!
    attachesType: String!
}

type MessageOutput{
    user: String!
    message: String!
    timestamp: Float!
    attachesType: String!
}

type Mutation {
    userLogin(email:String!,password:String!):String

    addUser(name: String!, email: String!,password: String!,userRole: String!,company: String!): String

    updateUser( id: ID!, name: String!, email: String!,password: String!,userRole: String!,company: String!): String

    deleteUser(id: ID!): String
}

input UserInput {

    name: String!
    email: String!
    password: String!
    userRole: String!
    company: String!
}

type User {

    name: String!
    email: String!
    password: String!
    userRole: String!
    company: String!
}

