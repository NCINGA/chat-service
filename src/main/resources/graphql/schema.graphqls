scalar Object

type Query{
    ping: String!
}

type Mutation{
    deleteUser(userId: String): String!
    resetPassword(userId: String!, newPassword: String!): String!
    createUser(displayName: String!, mailNickname: String!, userPrincipalName: String!, password: String!): String!
    unlockUser(userId: String!): String!
    disableUser(userId: String!): String!
    sendMessage(message : MessageInput): MessageOutput!

}

type Subscription {
    subscription(message : MessageInput): MessageOutput
}

enum InputTypes {
    YES_NO
    YES
    OK
    EXIT
    TEXT
}

input MessageInput{
    session: String
    user: String
    message: String
    timestamp: Float
    inputType: String
}

type MessageOutput{
    session: String
    user: String
    message: String
    timestamp: Float
    inputType: String
}

